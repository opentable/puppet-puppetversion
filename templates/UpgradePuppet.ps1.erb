param (
  [Parameter(Mandatory=$true)]
  [string]$version,

  [Parameter(Mandatory=$true)]
  [string]$architecture
)

if ($architecture -eq 'x86') {
  $puppetMsiFileName="puppet-$version.msi"
} else {
  $puppetMsiFileName="puppet-$version-$architecture.msi"
}

$sourceMsi = "<%= @download_source %>/$puppetMsiFileName"
$destMsi = "C:\Windows\Temp\$puppetMsiFileName"

$majorVersion = [System.Environment]::OSVersion.Version.Major
if ($majorVersion -eq 5) {
  $sourceConf = "C:\Documents and Settings\All Users\Application Data\PuppetLabs\puppet\etc\puppet.conf"
} else {
  $sourceConf = "C:\ProgramData\PuppetLabs\puppet\etc\puppet.conf"
}


$destConf = "C:\Windows\Temp\puppet.conf"

$uninstallLog = "C:\Windows\Temp\uninstall_puppet.log"
$installLog = "C:\Windows\Temp\install_puppet.log"

$wc = New-Object System.Net.WebClient

$proxyAddress = '<%= @proxy_address %>'
if ($proxyAddress -ne '') {
  if (!$proxyAddress.StartsWith('http://')) {
    $proxyAddress = 'http://' + $proxyAddress
  }

  $proxy = new-object System.Net.WebProxy
  $proxy.Address = $proxyAddress
  $wc.proxy = $proxy
}

$wc.DownloadFile($sourceMsi, $destMsi)

Copy-Item "$sourceConf" -Destination $destConf

Wait-Process -name msiexec -timeout 30 -ErrorAction SilentlyContinue
$ip = (Start-Process -FilePath "msiexec.exe" -ArgumentList "/i $destMsi /qn /l*v $installLog" -Wait -Passthru).ExitCode
if ( $ip -ne 0 ) { Exit 1 }

Copy-Item $destConf -Destination "$sourceConf" -Force

Wait-Process -name msiexec -timeout 30 -ErrorAction SilentlyContinue
Remove-Item $destMsi
Remove-Item $destConf
Remove-Item $installLog
